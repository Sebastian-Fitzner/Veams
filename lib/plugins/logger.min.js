!function(e,o){"object"==typeof exports&&"object"==typeof module?module.exports=o():"function"==typeof define&&define.amd?define("plugins/logger",[],o):"object"==typeof exports?exports["plugins/logger"]=o():(e["plugins/logger"]=e["plugins/logger"]||{},e["plugins/logger"]["plugins/logger"]=o())}(this,function(){return function(e){function o(t){if(n[t])return n[t].exports;var r=n[t]={exports:{},id:t,loaded:!1};return e[t].call(r.exports,r,r.exports,o),r.loaded=!0,r.exports}var n={};return o.m=e,o.c=n,o.p="",o(0)}([function(e,o){"use strict";Object.defineProperty(o,"__esModule",{value:!0});var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t={pluginName:"Logger",initialize:function(e){e.devmode=!1,e.logger=!1,document.location.search.indexOf("devmode")>-1&&(e.devmode=!0),document.location.search.indexOf("logger")>-1&&(e.logger=!0),e.devmode||(console.log=console.warn=function(){}),e.devmode&&e.logger&&!function(){var e=document.createElement("pre");e.setAttribute("id","logger"),document.body.appendChild(e),console.write=function(){for(var o=0;o<arguments.length;o++)"object"===n(arguments[o])?e.innerHTML+=(JSON&&JSON.stringify?JSON.stringify(arguments[o],void 0,2):arguments[o])+"<br />":e.innerHTML+=arguments[o]+"<br />";e.innerHTML+="<br />",e.scrollTop=e.scrollHeight},console.error=function(){e.innerHTML+="[Error]<br />",console.write.apply(this,arguments)},console.warn=function(){e.innerHTML+="[Warn]<br />",console.write.apply(this,arguments)},console.log=function(){e.innerHTML+="[Log]<br />",console.write.apply(this,arguments)}}()}};o["default"]=t,e.exports=o["default"]}])});
//# sourceMappingURL=logger.min.js.map